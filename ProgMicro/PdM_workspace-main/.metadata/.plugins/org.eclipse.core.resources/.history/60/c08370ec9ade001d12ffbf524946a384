/*
 * DigitalLeve.c
 *
 *  Created on: 18 abr. 2023
 *      Author: denis
 */

#include "API_delay.h"
#include "API_debounce.h"
#include "mpu9265_SPI.h"

/* Accelerometer reference to determine the inclination plane*/
#define ACCEL_REF	32768 // (2^15) --> half range for each plane

typedef enum{
	IDLE,
	MEASURE,
	CONFIG
} LevelState_t;

static LevelState_t actualState;

/* Resolution of angle measures:
 * 1: for 1°
 * 2: for 0,5°
 * 4: for 0.25° */
uint8_t accelRes = 1;

/* @brief: Inform the actual angle of the X axis
 * @param: None
 * @retval: The actual angle read from mpu9265 accelerometer.
 * This could be a value from -90° to 90°
 * */
float getXAngle(){
	int16_t angle;
	uint16_t xAccel = MPUReadAccelXAxis();
	/* See in which plane is inclined to determine how
	 * to calculate the angle*/
	/* Positive angles */
	if(xAccel > ACCEL_REF){
		angle = 90 - ((xAccel - ACCEL_REF))*90;
	}
	/* Negative angles */
	else{
		angle = -90*xAccel;
	}
	uint8_t shiftBits = 16 - accelRes;
	angle = (float)((angle<<shiftBits)/accelRes);
	return (angle);
}
