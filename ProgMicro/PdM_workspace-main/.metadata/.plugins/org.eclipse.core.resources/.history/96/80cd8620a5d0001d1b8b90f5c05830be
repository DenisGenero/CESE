#include "API_uart.h"

bool_t uartInit(){

	/* Flag to know if the peripheral has been correctly configured*/
	bool_t correctInit = true;

	/* Put the USART peripheral in the Asynchronous mode (UART Mode) */
	UartHandle.Instance        = USARTx;
	UartHandle.Init.BaudRate   = 9600;					// BaudRate    = 9600 baud
	UartHandle.Init.WordLength = UART_WORDLENGTH_8B;	// Word Length = 8 Bits (7 data bit + 1 parity bit)
	UartHandle.Init.StopBits   = UART_STOPBITS_1;		// Stop Bit    = One Stop bit
	UartHandle.Init.Parity     = UART_PARITY_ODD;		// Parity      = ODD parity
	UartHandle.Init.HwFlowCtl  = UART_HWCONTROL_NONE;	// Hardware flow control disabled (RTS and CTS signals) */
	UartHandle.Init.Mode       = UART_MODE_TX_RX;
	UartHandle.Init.OverSampling = UART_OVERSAMPLING_16;

	if (HAL_UART_Init(&UartHandle) != HAL_OK){
		/* Initialization Error */
		correctInit = false;
	}

	return (correctInit);
}

void uartSendString(uint8_t * pstring){

}

void uartSendStringSize(uint8_t * pstring, uint16_t size){

}

void uartReceiveStringSize(uint8_t * pstring, uint16_t size){

}
